# Reusable workflow for all Windows builds
name: Fuse App For Windows
run-name: Build Fuse App for windows / ${{ github.actor }} /

on:
  workflow_call:
    inputs:
      dependencies:
        type: string
        required: false
        default: ""
      configure_params:
        type: string
        required: false
        default: ""
      verify_ui:
        type: string
        required: true
      verify_audio:
        type: string
        required: false
        default: "directsound"
      verify_libxml2:
        type: string
        required: false
        default: "no"
      verify_other:
        type: string
        required: false
        default: ""

jobs:
  build:
    name: Build App
    runs-on: windows-latest
    timeout-minutes: 15
    env:
      CYGWIN_NOWINPATH: 1
      
      # Custom build libraries
      CPPFLAGS: "-I/usr/local/i686-w64-mingw32/include"
      LDFLAGS: "-L/usr/local/i686-w64-mingw32/lib"
      PKG_CONFIG_LIBDIR: "/usr/local/i686-w64-mingw32/lib/pkgconfig:/usr/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig"    
    steps:
      - name: (1) Prepare environment
        run: |
          cd ${GITHUB_WORKSPACE}

          echo "Adjust autocrlf in git.."
          git config --global core.autocrlf input

          echo -n "Current directory: "
          pwd
          ls -la
        shell: bash

      - name: (2) Check out repository code
        uses: actions/checkout@v3

      - name: (3) Install Cygwin (32 bit) with libs
        uses: cygwin/cygwin-install-action@master
        with:
          platform: x86
          packages: |
            autoconf \
            automake \
            bison \
            flex \
            gcc-core \
            gcc-g++ \
            gettext-devel \
            libtool \
            make \
            mingw64-i686-bzip2 \
            mingw64-i686-gcc-core \
            mingw64-i686-gcc-g++ \
            mingw64-i686-libgcrypt \
            mingw64-i686-libgpg-error \
            mingw64-i686-libpng \
            mingw64-i686-win-iconv \
            mingw64-i686-winpthread \
            mingw64-i686-zlib \
            pkg-config \
            ${{ inputs.dependencies }}

      - name: (4) Download libspectrum artefact
        uses: actions/download-artifact@v3
        with:
          name: libspectrum-installed-windows
          path: libspectrum

      - name: (5) Install libspectrum from artefact
        run: |
          mkdir /usr || true
          mkdir /usr/local/ || true
          mkdir /usr/local/i686-w64-mingw32/ || true
          cd /usr/local/i686-w64-mingw32/lib
          ls -la
          cd /usr/local/i686-w64-mingw32
          ls -la
          cd /usr/local
          ls -la
          cd /usr
          ls -la
          cd /
          ls -la
          # Extract (-x) according to saved absolute paths
          tar -xvPf ${GITHUB_WORKSPACE}/libspectrum/libspectrum-installed-windows.tar
          echo "Done"
        shell: C:\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'

      - name: (6) Autogen.sh
        run: |
          cd ${GITHUB_WORKSPACE}

          echo "Running autogen.sh .."
          ./autogen.sh
        shell: bash

      - name: (7) Configure for Windows
        run: |
          cd ${GITHUB_WORKSPACE}

          echo "Running configure .."
          ./configure \
          --build=i686-pc-cygwin \
          --host=i686-w64-mingw32 \
          --prefix=/usr/local/i686-w64-mingw32 \
          --disable-static \
          ${{ inputs.configure_params }} \
          |& tee ./configure.out
        shell: bash

      - name: (8) Verify output from configure
        # Most of the tested strings are common for all Windows builds
        # Only the strings related to UI selection differ
        run: |          
          cd ${GITHUB_WORKSPACE}
          
          .github/scripts/in_config.sh "Fuse options"
          .github/scripts/in_config.sh "zlib support: yes"
          .github/scripts/in_config.sh "libpng support: yes"
          .github/scripts/in_config.sh "Spectranet support: yes"
          .github/scripts/in_config.sh "SpeccyBoot support: no"
          .github/scripts/in_config.sh "TTX2000 S support: yes"
          .github/scripts/in_config.sh "Desktop integration: no"
          
          .github/scripts/in_config.sh "User interface: ${{ inputs.verify_ui }}"
          .github/scripts/in_config.sh "libxml2 support: ${{ inputs.verify_libxml2 }}"
          .github/scripts/in_config.sh "Selected audio driver: ${{ inputs.verify_audio }}"
        shell: bash
      - if: ${{ inputs.verify_other }}
        run: |
          .github/scripts/in_config.sh "${{ inputs.verify_other }}"
        shell: bash

      - name: (9) Make
        run: |
          cd ${GITHUB_WORKSPACE}
          
          echo "Running make .."
          make
        shell: bash

      - name: (10) Install
        run: |
          cd ${GITHUB_WORKSPACE}
          
          echo "Running make dist-win32-dir .."
          make install dist-win32-dir
        shell: bash

      - name: (11) Finish
        run: |
          echo "üçè Finishing with status ${{ job.status }}."
