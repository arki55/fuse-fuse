# Reusable workflow for all WII builds
name: Fuse App For WII (single build)
run-name: Build Fuse App for WII (build ${{ inputs.name }}) / ${{ github.actor }} /

on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      dependencies:
        type: string
        required: false
        default: ""
      configure_params:
        type: string
        required: false
        default: ""
      verify_ui:
        type: string
        required: true
      verify_audio:
        type: string
        required: false
        default: "oss"
      verify_other:
        type: string
        required: false
        default: ""

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container: devkitpro/devkitppc
    env:
      PKG_CONFIG_PATH: /opt/devkitpro/devkitPPC/lib/pkgconfig
    defaults:
      run:
        shell: bash
    steps:
      - name: (1) Prepare environment
        run: |
          echo "Available pacman packages:"
          dkp-pacman -Sl
          echo ""
          
          echo "Available devkitPro packages:"
          dkp-pacman -Sl dkp-libs
          echo ""
          
          echo "WII specific libraries:"
          find $DEVKITPRO -maxdepth 2 -type d
          echo ""
          
          # Override path to allow cross-compiling (add to file)
          echo "$DEVKITPPC/bin" >> $GITHUB_PATH

      - name: (2) Install dependencies
        run: |
          echo "Installing dependencies .."
          echo "Using devkitpro/devkitppc image"
          sudo apt-get update
          sudo apt-get -y install --no-install-recommends \
            wget tar autoconf automake libtool \
            bison flex \
            ${{ inputs.dependencies }} && \
          sudo rm -rf /var/lib/apt/lists/*
          echo "Done."

      - name: (3) Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: (4) Download libspectrum artefact
        uses: actions/download-artifact@v3
        with:
          name: libspectrum-installed-wii-fuse-app
          path: libspectrum

      - name: (5) Install libspectrum from artefact
        run: |
          # Extract (-x) files into /opt/devkitpro/devkitPPC/
          echo "Extract libspectrum lib files .."
          sudo tar --directory / -xvf libspectrum/libspectrum-installed-wii.tar
          
          echo "Verify if files are there .."
          ls -la -R /opt/devkitpro/devkitPPC/
          
          echo "Done"

      - name: (6) Autogen.sh
        run: ./autogen.sh

      - name: (7) Configure for WII
        id: run-configure
        run: |
          ./configure \
          --target=powerpc-eabi \
          --host=powerpc-eabi \
          --prefix=$DEVKITPPC \
          --without-gpm \
          --without-libxml2 \
          --without-x \
          CFLAGS="-g -I$DEVKITPPC/include -I$DEVKITPRO/libogc/include -DGEKKO" \
          LDFLAGS="-g -mrvl -mcpu=750 -meabi -mhard-float \
                     -Wl,-Map,fuse.elf.map -L$DEVKITPPC/lib \
                     -L$DEVKITPRO/libogc/lib/wii" \
          LIBS="-lfat -lwiiuse -lbte -logc -lm" \
          ${{ inputs.configure_params }} \
          |& tee ./configure.out

      - name: Check config.log (on failure)
        if: failure() && steps.run-configure.outcome != 'success'
        run: |
          echo "Reading config.log file .."
          cat config.log

      - name: (8) Verify output from configure
        # Most of the tested strings are common for all WII builds
        # Only the strings related to UI selection differ
        run: |          
          .github/scripts/in_config.sh "checking whether we are cross compiling... yes"
          .github/scripts/in_config.sh "checking for powerpc-eabi-gcc... powerpc-eabi-gcc"
          .github/scripts/in_config.sh "Fuse options"
          .github/scripts/in_config.sh "zlib support: no"
          .github/scripts/in_config.sh "libxml2 support: no"
          .github/scripts/in_config.sh "libpng support: no"
          .github/scripts/in_config.sh "Spectranet support: no"
          .github/scripts/in_config.sh "SpeccyBoot support: no"
          .github/scripts/in_config.sh "TTX2000 S support: no"
          .github/scripts/in_config.sh "Desktop integration: no"
          
          .github/scripts/in_config.sh "User interface: ${{ inputs.verify_ui }}"
          .github/scripts/in_config.sh "Selected audio driver: ${{ inputs.verify_audio }}"
      - if: ${{ inputs.verify_other }}
        run: |
          .github/scripts/in_config.sh "${{ inputs.verify_other }}"

      - name: (9) Make
        run: |
          EXEEXT=".elf" make -e
          
          if [[ ! -f "fuse.elf" ]]; then
            echo "Fuse.elf was not created!"
            exit -2
          fi

      - name: (10) Install
        run: make install

      - name: (11) Finish
        run: |
          echo "üçè Finishing with status ${{ job.status }}."
