# Reusable workflow for deploying build file(s) via FTP
name: Upload to FTP
run-name: Upload build file(s) to FTP / ${{ github.actor }} /

on:
  workflow_call:
    inputs:
      # Name this setup (no spaces please)
      artefact:
        type: string
        required: true
      deploy_zip:
        type: boolean
        required: true
      deploy_sha1:
        type: boolean
        required: false
        default: false
    secrets:
      DEPLOY_ZIP_PATH:
        description: "Relative path that prefixes uploaded ZIP file on FTP server"
        required: true
      DEPLOY_ZIP_HOST:
        description: "Hostname of FTP server where ZIP package will be uploaded"
        required: true
      DEPLOY_ZIP_USER:
        description: "Username that will be used for uploading ZIP file to FTP server"
        required: true
      DEPLOY_ZIP_PASS:
        description: "Password for user that will be used for uploading ZIP package to FTP server"
        required: true

jobs:
  upload:
    name: Upload to FTP
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      file_path_artefact: ${{ inputs.artefact }}
      file_path_zip: ${{ inputs.artefact }}.zip
      file_path_sha1: ${{ inputs.artefact }}.zip.sha1

      deploy_zip_path: ${{ secrets.DEPLOY_ZIP_PATH }}
      deploy_zip_host: ${{ secrets.DEPLOY_ZIP_HOST }}
      deploy_zip_user: ${{ secrets.DEPLOY_ZIP_USER }}
      deploy_zip_pass: ${{ secrets.DEPLOY_ZIP_PASS }}
    steps:
      - name: (1) Download build artefact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.file_path_artefact }}

      - name: (2) Verify FTP/DEPLOY secrets are set
        if: ${{ inputs.deploy_zip }}
        run: |
          error=0
          if [[ -z "${{ env.deploy_zip_path }}" ]]; then
            echo "::error::DEPLOY_ZIP_PATH secret missing"
            error=1
          fi
          
          if [[ -z "${{ env.deploy_zip_host }}" ]]; then
            echo "::error::DEPLOY_ZIP_HOST secret missing"
            error=1
          fi
          
          if [[ -z "${{ env.deploy_zip_user }}" ]]; then
            echo "::error::DEPLOY_ZIP_USER secret missing"
            error=1
          fi
          
          if [[ -z "${{ env.deploy_zip_pass }}" ]]; then
            echo "::error::DEPLOY_ZIP_PASS secret missing"
            error=1
          fi
          
          if [[ $error -eq 1 ]]; then
            exit 1
          fi

          echo "All FTP/DEPLOY parameters set"

      - name: (3a) Prepare data before deploy (zip)
        id: deploy-zip
        if: ${{ inputs.deploy_zip }}
        run: |
          cd ${GITHUB_WORKSPACE}
          echo "Content of directory:"
          ls -laR

          echo "Deploying file ${{ env.file_path_zip }}"

          src="${GITHUB_WORKSPACE}/${{ env.file_path_zip }}"
          dest="${{ env.deploy_zip_path }}/${{ github.ref_name }}/${{ env.file_path_zip }}"

          echo "Source file: $src"
          echo "Destination file: $dest"

          echo "src=${src}" >> "$GITHUB_OUTPUT"
          echo "dest=${dest}" >> "$GITHUB_OUTPUT"

      - name: (3b) 📂 Send zip file
        uses: bayssmekanique/action-simple-file-upload@v1
        with:
          host: "${{ env.deploy_zip_host }}"
          user: "${{ env.deploy_zip_user }}"
          password: "${{ env.deploy_zip_pass }}"
          src: "${{ steps.deploy-zip.outputs.src }}"
          dest: "${{ steps.deploy-zip.outputs.dest }}"

      - name: (3) Deploy SHA1 file (different location)
        if: ${{ inputs.deploy_sha1 }}
        run: |
          echo "Deploying file ${{ env.file_path_sha1 }}"
          echo "Not implemented yet"

      - name: (4) Finish
        run: |
          echo "🍏 Finishing with status ${{ job.status }}."
